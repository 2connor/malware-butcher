import os
import sys

import find_pe_files
import cymru_and_virustotal
import generate_report

user_arguments = sys.argv
program_help = """\
 _____ _____ __    _ _ _ _____ _____ _____ 
|     |  _  |  |  | | | |  _  | __  |   __|\n\
| | | |     |  |__| | | |     |    -|   __|\n\
|_|_|_|__|__|_____|_____|__|__|__|__|_____|\n\
 _____ _____ _____ _____ _____ _____ _____ \n\
| __  |  |  |_   _|     |  |  |   __| __  |\n\
| __ -|  |  | | | |   --|     |   __|    -|\n\
|_____|_____| |_| |_____|__|__|_____|__|__|\n\
\n\
A tool that will carve PE files from a forensic image\n\
and put them on display alongside some useful information.\n\
\n\
Usage:\n\
    python malware-butcher.py [-options] forensic_image\n\
\n\
Options:\n\
    -h      Show this help information\n\
\n\
    -a      Run all parts of the program sequentially\n\
\n\
    -1      Find PE files in the forensic image\n\
    -2      Check found PE files for malware\n\
    -3      Generate a DOCX report from available data\n\
\n\
    -o dir  PE file output directory (default \"pe\")"""

if ((len(user_arguments) == 1) or "-h" in user_arguments):
    print(program_help)
    exit()

# work in the path the user is in
# this means files like the report will be saved here
current_dir = os.getcwd()
os.system("cd " + current_dir)
pe_output_dir = "pe"
# the forensic image should be the last argument
forensic_image = user_arguments[len(user_arguments) - 1]

# user specified output directory
# the directory name should be the argument after the "-o"
if ("-o" in user_arguments):
    pos = user_arguments.index("-o")
    pe_output_dir = user_arguments[pos + 1]

# run all
if ("-a" in user_arguments):
    n = find_pe_files.run(pe_output_dir, forensic_image)
    print(str(n) + " PE files carved")
    
    cymru_and_virustotal.run()
    print("APIs consulted")
    
    docx_name = generate_report.run(pe_output_dir, forensic_image)
    print("DOCX written: " + docx_name)
    exit()

if ("-1" in user_arguments):
    print(user_arguments[len(user_arguments) - 1])
    n = find_pe_files.run(pe_output_dir, forensic_image)
    print(str(n) + " PE files carved")
    
if ("-2" in user_arguments):
    cymru_and_virustotal.run()
    print("APIs consulted")
    
if ("-3" in user_arguments):
    docx_name = generate_report.run(pe_output_dir, forensic_image)
    print("DOCX written: " + docx_name)
    
