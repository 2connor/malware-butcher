import docx
import operator
import os

def run(pe_output_dir, forensic_image):
    input_file = "api-results.csv"
    report_name = "report.docx"
    
    document = docx.Document()

    document.add_heading("Forensic Malware Report", 0)
    document.add_heading("Size of the Forensic Image", 1)
    image_size = os.path.getsize(forensic_image)

    # convert file size to appropriate format
    if (image_size >= 1024):
        image_size = int(image_size / 1024)
        image_size_text = str(image_size) + " KB"
    elif (image_size >= 1048576):
        image_size = int(image_size / 1048576)
        image_size_text = str(image_size) + " MB"
    else:
        image_size_text = str(image_size) + " B"
        
    document.add_paragraph(image_size_text)
    document.add_heading("Number of Portable Executables Found Within", 1)
    # pe_num will equate to the number of files in the "pe" directory
    # this directory should house a copy of every PE file found
    pe_num = str(len(os.listdir(pe_output_dir)))
    document.add_paragraph(pe_num)

    document.add_heading("Malware Detection Results Table", 1)
    results_table = document.add_table(rows=1, cols=3)
    hdr_cells = results_table.rows[0].cells
    hdr_cells[0].text = "Hash"
    hdr_cells[1].text = "VirusTotal (%)"
    hdr_cells[2].text = "Cymru (%)"

    hash_dict = {}
    hash_dict_total = {}

    # read in data from malware detecting APIs
    f = open(input_file)
    for line in f:
        line = line.split(",")
        hash_dict[line[0]] = [line[1], line[2]]
        hash_dict_total[line[0]] = int(line[1]) + int(line[2])

    # sort file hashes by the sum of the two percentages in descending order
    hash_dict_total= dict(sorted(hash_dict_total.items(),
                                 key=lambda item: item[1],
                                 reverse=True))

    # create a results table at the end of the report
    for a in hash_dict_total:
        row_cells = results_table.add_row().cells
        row_cells[0].text = a
        row_cells[1].text = hash_dict[a][0]
        row_cells[2].text = hash_dict[a][1]

    document.save(report_name)
    return report_name
