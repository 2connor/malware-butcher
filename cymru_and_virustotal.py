import os
import requests
import subprocess

def run():
    vt_api_key = "key"

    txt_list = "file-hash-list.txt"
    output_file = "api-results.csv"

    f = open(txt_list, "r")
    hash_list = f.read()
    f.close()
    hash_list = hash_list.split("\n")

    f = open(output_file, "w")
    first_line = True

    # Team Cymru
    file_dir = os.path.dirname(os.path.realpath(__file__))
    command = "cd {} && ncat.exe hash.cymru.com 43 < {}".format(file_dir, txt_list)
    p = subprocess.run(command, stdout=subprocess.PIPE, shell=True)
    ncat_response = p.stdout
    cymru_results = ncat_response.split(b'\n')

    for i in range(2, len(cymru_results) - 1):
        # parse the response further
        md5_hash = (cymru_results[i][:32]).decode("utf-8")
        result = (cymru_results[i][-2:]).decode("utf-8")
        # if result was NO_DATA
        # meaning the hash wasn't found in their database
        if (result == "TA"):
            cymru = "0"
        else:
            # may have leading whitespace
            cymru = result.strip()

        # VirusTotal
        url = "https://www.virustotal.com/api/v3/files/" + md5_hash
        headers = {"accept": "application/json",
                   "x-apikey": vt_api_key}
        response = requests.get(url, headers=headers).text

        # parse reponse
        stats_start = response.find("\"last_analysis_stats\"")
        stats_end = response[stats_start:].find("}") + stats_start

        stats = response[stats_start:stats_end].split("\n")
        # number of antiviruses that did and didn't
        # dectect the file as malicious
        vt_malicious = stats[7][29:-1]
        vt_undetected = stats[8][30:]

        # calculate confidence
        a = int(vt_malicious)
        b = int(vt_malicious) + int(vt_undetected)
        vt = int(a/b * 100)

        # write both results to a CSV file
        line = md5_hash + "," + str(vt) + "," + cymru
        if (first_line == False):
            f.write("\n" + line)
        else:
            f.write(line)
            first_line = False

    f.close()
